"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/stores/useAppStore.ts":
/*!***********************************!*\
  !*** ./src/stores/useAppStore.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAppStore: function() { return /* binding */ useAppStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst useAppStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.devtools)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        // Theme (dark mode only)\n        theme: {\n            mode: \"dark\",\n            primaryColor: \"blue\",\n            radius: 0.75\n        },\n        setTheme: (theme)=>set((state)=>({\n                    theme: {\n                        ...state.theme,\n                        ...theme\n                    }\n                }), false, \"setTheme\"),\n        // User\n        user: null,\n        setUser: (user)=>set({\n                user\n            }, false, \"setUser\"),\n        // Sidebar\n        sidebarCollapsed: false,\n        setSidebarCollapsed: (collapsed)=>set({\n                sidebarCollapsed: collapsed\n            }, false, \"setSidebarCollapsed\"),\n        // Simulation\n        currentSimulation: null,\n        simulations: [],\n        setCurrentSimulation: (simulation)=>set({\n                currentSimulation: simulation\n            }, false, \"setCurrentSimulation\"),\n        addSimulation: (simulation)=>set((state)=>({\n                    simulations: [\n                        simulation,\n                        ...state.simulations\n                    ].slice(0, 10)\n                }), false, \"addSimulation\"),\n        updateSimulation: (id, updates)=>set((state)=>{\n                var _state_currentSimulation;\n                return {\n                    simulations: state.simulations.map((sim)=>sim.id === id ? {\n                            ...sim,\n                            ...updates\n                        } : sim),\n                    currentSimulation: ((_state_currentSimulation = state.currentSimulation) === null || _state_currentSimulation === void 0 ? void 0 : _state_currentSimulation.id) === id ? {\n                        ...state.currentSimulation,\n                        ...updates\n                    } : state.currentSimulation\n                };\n            }, false, \"updateSimulation\"),\n        // Detection Results\n        detectionResults: [],\n        setDetectionResults: (results)=>set({\n                detectionResults: results\n            }, false, \"setDetectionResults\"),\n        updateDetectionResult: (techniqueId, updates)=>set((state)=>({\n                    detectionResults: state.detectionResults.map((result)=>result.techniqueId === techniqueId ? {\n                            ...result,\n                            ...updates\n                        } : result)\n                }), false, \"updateDetectionResult\"),\n        // Reports\n        reports: [],\n        setReports: (reports)=>set({\n                reports\n            }, false, \"setReports\"),\n        addReport: (report)=>set((state)=>({\n                    reports: [\n                        report,\n                        ...state.reports\n                    ]\n                }), false, \"addReport\"),\n        // Metrics\n        metrics: null,\n        setMetrics: (metrics)=>set({\n                metrics\n            }, false, \"setMetrics\"),\n        // System Status\n        systemStatus: null,\n        setSystemStatus: (status)=>set({\n                systemStatus: status\n            }, false, \"setSystemStatus\"),\n        // APT Profiles\n        aptProfiles: [],\n        setAPTProfiles: (profiles)=>set({\n                aptProfiles: profiles\n            }, false, \"setAPTProfiles\"),\n        // UI State\n        activeTab: \"dashboard\",\n        setActiveTab: (tab)=>set({\n                activeTab: tab\n            }, false, \"setActiveTab\"),\n        showSettings: false,\n        setShowSettings: (show)=>set({\n                showSettings: show\n            }, false, \"setShowSettings\"),\n        showAppConfig: false,\n        setShowAppConfig: (show)=>set({\n                showAppConfig: show\n            }, false, \"setShowAppConfig\"),\n        showNotifications: false,\n        setShowNotifications: (show)=>set({\n                showNotifications: show\n            }, false, \"setShowNotifications\"),\n        showDocumentation: false,\n        setShowDocumentation: (show)=>set({\n                showDocumentation: show\n            }, false, \"setShowDocumentation\"),\n        // Loading States\n        loading: {\n            simulations: false,\n            detections: false,\n            reports: false,\n            metrics: false\n        },\n        setLoading: (key, value)=>set((state)=>({\n                    loading: {\n                        ...state.loading,\n                        [key]: value\n                    }\n                }), false, \"setLoading\")\n    }), {\n    name: \"detection-lab-store\",\n    partialize: (state)=>({\n            theme: state.theme,\n            sidebarCollapsed: state.sidebarCollapsed,\n            activeTab: state.activeTab,\n            user: state.user\n        })\n}), {\n    name: \"detection-lab-store\"\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/stores/useAppStore.ts\n"));

/***/ })

});